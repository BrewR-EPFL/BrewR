name: BrewR APK

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Set up JDK 17 for the Android build
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'

    # Cache Gradle dependencies
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    # Set up Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 34
        build-tools: "34.0.0"
        ndk: "25.1.8937393"

    # Decode and create google-services.json from the secret
    - name: Decode google-services.json
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES }}
      run: |
        echo $GOOGLE_SERVICES | base64 --decode > ./app/google-services.json

    # Debug: Check if google-services.json is correctly decoded
    - name: Debug google-services.json
      run: cat ./app/google-services.json
      
    # Grant execute permissions to gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # Download and cache dependencies
    - name: Download dependencies
      run: ./gradlew build --no-daemon --stacktrace

    # Assemble APK (you can add `assembleRelease` for release builds)
    - name: Build Debug APK
      run: ./gradlew assembleDebug

    # Upload the generated APK to GitHub Artifacts
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: BrewR-APK
        path: app/build/outputs/apk/debug/app-debug.apk
